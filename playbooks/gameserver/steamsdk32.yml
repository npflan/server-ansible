---
- hosts: npf_gameservers
  gather_facts: no
  tasks:
  - name: Create sdk32
    file: path=/home/steam/.steam/sdk32 group=steam owner=steam state=directory
    async: 64
    poll: 2

  - stat: path=/home/steam/.steam/steamcmd/linux32/steamclient.so
    register: steamclient

  - name: Create all steamcmd directory thingies
    command: /usr/games/steamcmd +quit
    become: true
    become_user: steam
    async: 64
    poll: 2
    when: steamclient.stat.exists == False

  - name: link steamclient.so
    file: path=/home/steam/.steam/sdk32/steamclient.so group=steam owner=steam state=link src=/home/steam/.steam/steamcmd/linux32/steamclient.so
    async: 64
    poll: 2

  - stat: path=servertokens.txt
    register: servertokens_stat
    delegate_to: 127.0.0.1

  - fail:
      msg: "servertokens.txt doesn't exist!"
    when: servertokens_stat.stat.exists == False

  - name: Get all server tokens
    local_action: command cat servertokens.txt
    register: servertokens_cat
  
  - debug: msg={{servertokens_cat.stdout_lines}}

  - debug: msg={{ansible_play_batch}}

  - name: creating iterator
    debug: msg="iterator dummy"
    with_sequence: start=1 count={{ (ansible_play_batch | count) }}
    register: iterator

  - set_fact:
      iter: "{{ iterator.results | map(attribute='item') | list }}"
    with_sequence: "start=2 count={{ (ansible_play_batch | count)}}"
  
  - set_fact:
      servertokens_ids: []
      servertokens: []

  - debug: msg="{{item}}"
    with_items: "{{ servertokens_cat.stdout_lines | split(" ") }}""

#  - set_fact:
#      servertokens_ids: item
#    with_items: "{{ servertokens_cat.stdout_lines | split(" ") }}""

  - debug: msg={{iter}}

  - set_fact: {"{{ item.1 }}" : "{{ servertokens_cat.stdout_lines[item.0] }}"}
    with_together:
    - "{{ iter }}"
    - "{{ ansible_play_batch | ipaddr('address') | ipaddr('int') }}"

  - debug: msg={{item | ipaddr('address') | ipaddr('int')}}
    with_items: ansible_play_batch